/**
 * @ngdoc object
 * @name ui.router.router.$urlRouterProvider
 *
 * @requires ui.router.util.$urlMatcherFactoryProvider
 * @requires $locationProvider
 *
 * @description
 * `$urlRouterProvider` has the responsibility of watching `$location`. 
 * When `$location` changes it runs through a list of rules one by one until a 
 * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify 
 * a url in a state configuration. All urls are compiled into a UrlMatcher object.
 *
 * There are several methods on `$urlRouterProvider` that make it useful to use directly
 * in your module config.
 */function $UrlRouterProvider(e,t){function o(e){var t=/^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(e.source);return t!=null?t[1].replace(/\\(.)/g,"$1"):""}function u(e,t){return e.replace(/\$(\$|\d{1,2})/,function(e,n){return t[n==="$"?0:Number(n)]})}function a(e,t,n){if(!n)return!1;var r=e.invoke(t,t,{$match:n});return isDefined(r)?r:!0}function f(t,o,u,a){function c(e,t,n){return f==="/"?e:t?f.slice(0,-1)+e:n?f.slice(1)+e:e}function h(e){function i(e){var n=e(u,t);if(!n)return!1;isString(n)&&t.replace().url(n);return!0}if(e&&e.defaultPrevented)return;var s=n.length,o;for(o=0;o<s;o++)if(i(n[o]))return;r&&i(r)}function p(){s=s||o.$on("$locationChangeSuccess",h);return s}var f=a.baseHref(),l=t.url();i||p();return{sync:function(){h()},listen:function(){return p()},update:function(e){if(e){l=t.url();return}if(t.url()===l)return;t.url(l);t.replace()},push:function(e,n,r){t.url(e.format(n||{}));r&&r.replace&&t.replace()},href:function(n,r,i){if(!n.validates(r))return null;var s=e.html5Mode();angular.isObject(s)&&(s=s.enabled);var o=n.format(r);i=i||{};!s&&o!==null&&(o="#"+e.hashPrefix()+o);o=c(o,s,i.absolute);if(!i.absolute||!o)return o;var u=!s&&o?"/":"",a=t.port();a=a===80||a===443?"":":"+a;return[t.protocol(),"://",t.host(),a,u,o].join("")}}}var n=[],r=null,i=!1,s;this.rule=function(e){if(!isFunction(e))throw new Error("'rule' must be a function");n.push(e);return this};this.otherwise=function(e){if(isString(e)){var t=e;e=function(){return t}}else if(!isFunction(e))throw new Error("'rule' must be a function");r=e;return this};this.when=function(e,n){var r,i=isString(n);isString(e)&&(e=t.compile(e));if(!i&&!isFunction(n)&&!isArray(n))throw new Error("invalid 'handler' in when()");var s={matcher:function(e,n){if(i){r=t.compile(n);n=["$match",function(e){return r.format(e)}]}return extend(function(t,r){return a(t,n,e.exec(r.path(),r.search()))},{prefix:isString(e.prefix)?e.prefix:""})},regex:function(e,t){if(e.global||e.sticky)throw new Error("when() RegExp must not be global or sticky");if(i){r=t;t=["$match",function(e){return u(r,e)}]}return extend(function(n,r){return a(n,t,e.exec(r.path()))},{prefix:o(e)})}},f={matcher:t.isMatcher(e),regex:e instanceof RegExp};for(var l in f)if(f[l])return this.rule(s[l](e,n));throw new Error("invalid 'what' in when()")};this.deferIntercept=function(e){e===undefined&&(e=!0);i=e};this.$get=f;f.$inject=["$location","$rootScope","$injector","$browser"]}$UrlRouterProvider.$inject=["$locationProvider","$urlMatcherFactoryProvider"];angular.module("ui.router.router").provider("$urlRouter",$UrlRouterProvider);